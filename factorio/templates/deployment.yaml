apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "factorio.fullname" . }}
  labels:
    {{- include "factorio.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "factorio.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "factorio.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "factorio.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: {{ .Chart.Name }}-init
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          command: ['sh', '-c', 'if [ ! -d /factorio/config ]; then mkdir /factorio; cp -R /config /factorio/config; chown -R {{ .Values.securityContext.runAsUser }}:{{ .Values.podSecurityContext.fsGroup }} /factorio; fi;']
          volumeMounts:
          - name: config
            mountPath: /config
          - name: factorio
            mountPath: /factorio
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: factorio
              containerPort: 34197
              protocol: UDP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: factorio
            mountPath: /factorio
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ include "factorio.fullname" . }}-config
      - name: factorio
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim }}
      {{- else }}
        emptyDir: {}
      {{- end }}
